# -*- coding: utf-8 -*-
"""morphological.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LNuc8vv5F_fy-pVj6QWnGD38O-k3FZTZ

## ***Morphological Transformations***

morphological operations ->  Erosion, Dilation, Opening, Closing, etc.

Functions -> cv2.erode(), cv2.dilate(), cv2.morphologyEx()
"""

import numpy as np
import cv2 as cv
from matplotlib import pyplot as plt

from google.colab import files
from io import BytesIO
from PIL import Image

fname='micky.png'
uploaded = files.upload()
im = Image.open(BytesIO(uploaded[fname]))

img = cv.imread(fname)
plt.imshow(img)
plt.show()
print(img.shape)

#Erosion
img = cv.imread(fname)
kernel = np.ones((10,10),np.uint8)
erosion = cv.erode(img,kernel,iterations = 2)
plt.imshow(erosion)
plt.show()
print(erosion.shape)

#Dilusion
img = cv.imread(fname)
kernel = np.ones((10,10),np.uint8)
dilation = cv.dilate(img,kernel,iterations = 1)
plt.imshow(dilation)
plt.show()
print(dilation.shape)

#Morphological Gradient
img = cv.imread(fname)
kernel = np.ones((4,4),np.uint8)
gradient = cv.morphologyEx(img, cv.MORPH_GRADIENT, kernel)
plt.imshow(gradient)
plt.show()
print(gradient.shape)

#Morphological Top Hat
img = cv.imread(fname)
kernel = np.ones((4,4),np.uint8)
topHat = cv.morphologyEx(img, cv.MORPH_TOPHAT, kernel)
plt.imshow(topHat)
plt.show()
print(topHat.shape)

#Morphological Black Hat
img = cv.imread(fname)
kernel = np.ones((4,4),np.uint8)
blackHat = cv.morphologyEx(img, cv.MORPH_BLACKHAT, kernel)
plt.imshow(blackHat)
plt.show()
print(blackHat.shape)

pname='Snowfall.jpg'
uploaded = files.upload()
im = Image.open(BytesIO(uploaded[pname]))

img = cv.imread("Snowfall.jpg")
plt.imshow(img)
plt.show()
print(img.shape)

#Opening
img = cv.imread("Snowfall.jpg")
kernel = np.ones((4,4),np.uint8)
opening = cv.morphologyEx(img, cv.MORPH_OPEN, kernel)
plt.imshow(opening)
plt.show()
print(opening.shape)

#closing
img = cv.imread("Snowfall.jpg")
kernel = np.ones((4,4),np.uint8)
closing = cv.morphologyEx(img, cv.MORPH_CLOSE, kernel)
plt.imshow(closing)
plt.show()
print(closing.shape)

# Rectangular Kernel
img = cv.imread(fname)
kernel = np.array([[1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1]], np.uint8)
rectangular = cv.getStructuringElement(cv.MORPH_RECT,(5,5))
plt.imshow(rectangular)
plt.show()
print(rectangular.shape)



# Elliptical Kernel
img = cv.imread(fname)
kernel = np.array([[0, 0, 1, 0, 0],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [0, 0, 1, 0, 0]], np.uint8)
elliptical = cv.getStructuringElement(cv.MORPH_ELLIPSE,(5,5))
plt.imshow(elliptical)
plt.show()
print(elliptical.shape)

# Cross-shaped Kernel
img = cv.imread(fname)
kernel = np.array([[0, 0, 1, 0, 0],
       [0, 0, 1, 0, 0],
       [1, 1, 1, 1, 1],
       [0, 0, 1, 0, 0],
       [0, 0, 1, 0, 0]], np.uint8)
cross_shaped = cv.getStructuringElement(cv.MORPH_CROSS,(5,5))
plt.imshow(cross_shaped)
plt.show()
print(cross_shaped.shape)